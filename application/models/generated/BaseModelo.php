<?php

/**
 * BaseModelo
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $album_id
 * @property string $nombres
 * @property string $apellidos
 * @property string $telefono
 * @property string $email
 * @property date $nacimiento
 * @property string $nacionalidad
 * @property string $pais
 * @property integer $estatura
 * @property integer $zapato
 * @property integer $peso
 * @property string $ojos
 * @property string $cabello
 * @property string $longitud_pelo
 * @property string $idiomas
 * @property string $talento
 * @property string $descripcion
 * @property enum $sexo
 * @property integer $pecho
 * @property integer $cintura
 * @property integer $cadera
 * @property integer $torax
 * @property boolean $status
 * @property Doctrine_Collection $Photos
 * 
 * @package    Kromatick
 * @subpackage Intermodels
 * @author     Neozeratul <neozeratul@gmail.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseModelo extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('modelo');
        $this->hasColumn('album_id', 'integer', 20, array(
             'type' => 'integer',
             'length' => '20',
             ));
        $this->hasColumn('nombres', 'string', 60, array(
             'type' => 'string',
             'notnull' => true,
             'notblank' => true,
             'length' => '60',
             ));
        $this->hasColumn('apellidos', 'string', 60, array(
             'type' => 'string',
             'notnull' => true,
             'notblank' => true,
             'length' => '60',
             ));
        $this->hasColumn('telefono', 'string', 60, array(
             'type' => 'string',
             'notnull' => true,
             'notblank' => true,
             'length' => '60',
             ));
        $this->hasColumn('email', 'string', 60, array(
             'type' => 'string',
             'notnull' => true,
             'notblank' => true,
             'email' => true,
             'length' => '60',
             ));
        $this->hasColumn('nacimiento', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             'notblank' => true,
             ));
        $this->hasColumn('nacionalidad', 'string', 30, array(
             'type' => 'string',
             'notnull' => false,
             'notblank' => false,
             'length' => '30',
             ));
        $this->hasColumn('pais', 'string', 30, array(
             'type' => 'string',
             'notnull' => false,
             'notblank' => false,
             'length' => '30',
             ));
        $this->hasColumn('estatura', 'integer', 3, array(
             'type' => 'integer',
             'notnull' => true,
             'notblank' => true,
             'length' => '3',
             ));
        $this->hasColumn('zapato', 'integer', 2, array(
             'type' => 'integer',
             'notnull' => false,
             'notblank' => false,
             'length' => '2',
             ));
        $this->hasColumn('peso', 'integer', 3, array(
             'type' => 'integer',
             'notnull' => true,
             'notblank' => true,
             'length' => '3',
             ));
        $this->hasColumn('ojos', 'string', 30, array(
             'type' => 'string',
             'notnull' => true,
             'notblank' => true,
             'length' => '30',
             ));
        $this->hasColumn('cabello', 'string', 30, array(
             'type' => 'string',
             'notnull' => true,
             'notblank' => true,
             'length' => '30',
             ));
        $this->hasColumn('longitud_pelo', 'string', 30, array(
             'type' => 'string',
             'notnull' => false,
             'notblank' => false,
             'length' => '30',
             ));
        $this->hasColumn('idiomas', 'string', 60, array(
             'type' => 'string',
             'notnull' => false,
             'notblank' => false,
             'length' => '60',
             ));
        $this->hasColumn('talento', 'string', 30, array(
             'type' => 'string',
             'notnull' => false,
             'notblank' => false,
             'length' => '30',
             ));
        $this->hasColumn('descripcion', 'string', 600, array(
             'type' => 'string',
             'notnull' => true,
             'notblank' => true,
             'length' => '600',
             ));
        $this->hasColumn('sexo', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'Hombre',
              1 => 'Mujer',
             ),
             ));
        $this->hasColumn('pecho', 'integer', 3, array(
             'type' => 'integer',
             'length' => '3',
             ));
        $this->hasColumn('cintura', 'integer', 3, array(
             'type' => 'integer',
             'length' => '3',
             ));
        $this->hasColumn('cadera', 'integer', 3, array(
             'type' => 'integer',
             'length' => '3',
             ));
        $this->hasColumn('torax', 'integer', 3, array(
             'type' => 'integer',
             'length' => '3',
             ));
        $this->hasColumn('status', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Photo as Photos', array(
             'refClass' => 'ModeloPhoto',
             'local' => 'modelo_id',
             'foreign' => 'photo_id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}